name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:

  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install Node.js and npm
      uses: actions/setup-node@v3
      with:
        node-version: 18 # Update with your Node.js version
        
    - name: Install dependencies
      run: npm ci
      
    - name: tests
      run: npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-test]
    
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}
        
    - name: Install Terraform
      uses: hashicorp/setup-terraform@v2
      
    - name: Terraform Init
      run: terraform init
      
    - name: Terraform Plan
      run: terraform plan
      
    - name: Terraform Apply
      run: terraform apply -auto-approve # Be cautious with auto-approve in production
      
    - name: Build React app
      run: npm run build # Assuming your build command is 'npm run build'
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: react-app-build
        path: ./ComputexFrontend/build # Update with your build output path